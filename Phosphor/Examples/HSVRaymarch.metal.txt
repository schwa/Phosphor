// HSV raymarching shader
// Creates colorful volumetric effects using HSV color space and raymarching

float4 mainImage(float2 position, float2 resolution, float2 mouse, float time, float frame, texture2d<float, access::read> backbuffer) {
    float2 r = resolution;
    float2 FC = position;
    float4 o = float4(0);
    float t = time;
    
    float i = 0.0, g = 0.0, e = 0.0, R = 0.0, S = 0.0;
    
    for(; i < 100.0; i++) {
        S = 1.0;
        float3 p = float3((FC.xy / r - 0.5) * g, g - 0.3) - i / 2e5;
        
        // Rotate YZ plane
        float2 yz = p.yz * rotate2D(0.3);
        p.y = yz.x;
        p.z = yz.y;
        
        R = length(p);
        e = asin(-p.z / R) - 0.1 / R;
        p = float3(log(R) - t, e, atan2(p.x, p.y) * 3.0);
        
        for(S = 1.0; S < 100.0; S += S) {
            e += pow(abs(dot(sin(p.yxz * S), cos(p * S))), 0.2) / S;
        }
        
        g += e * R * 0.1;
        
        // Calculate color contribution
        float maxE = max(e * R * 1e4, 0.7);
        o.rgb += hsv(0.4 - 0.02 / R, maxE, 0.03 / exp(maxE));
    }
    
    return o;
}